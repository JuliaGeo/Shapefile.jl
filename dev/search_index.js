var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Shapefile","category":"page"},{"location":"#Shapefile","page":"Home","title":"Shapefile","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Shapefile.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Shapefile]","category":"page"},{"location":"#Shapefile.Handle","page":"Home","title":"Shapefile.Handle","text":"Handle\n\nHandle(path::AbstractString, [indexpath::AbstractString])\n\nLoad a shapefile into GeoInterface compatible objects. This can be plotted with Plots.jl plot.\n\nThe Vector of shape object can be accessed with shapes(handle).\n\nHandle may have a known bounding box, which can be retrieved with GeoInterface.bbox.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Header","page":"Home","title":"Shapefile.Header","text":"Header\n\nCommon header read/write object for shp and shx files.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Interval","page":"Home","title":"Shapefile.Interval","text":"Interval\n\nRepresents the range of measures or Z dimension, in a shape file.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.MultiPatch","page":"Home","title":"Shapefile.MultiPatch","text":"MultiPatch\n\nStores a collection of patch representing the boundary of a 3d object.\n\nFields\n\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\nparts: a Vector of Int32 indicating the object each point belongs to.\nparttypes: a Vector of Int32 indicating the type of object each point belongs to.\npoints: a Vector of Point represents a one or multiple spatial objects. \nzrange: and Interval of bounds for the zvalues.\nzvalues: a Vector of Float64 indicating absolute or relative heights.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.MultiPoint","page":"Home","title":"Shapefile.MultiPoint","text":"MultiPoint <: AbstractMultiPoint\n\nCollection of points, from a shape file.\n\nFields\n\npoints: a Vector of Point.\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.MultiPointM","page":"Home","title":"Shapefile.MultiPointM","text":"MultiPointM <: AbstractMultiPoint\n\nCollection of points, from a shape file.\n\nIncludes a measures field, holding values from each point.\n\nMay have a known bounding box, which can be retrieved with GeoInterface.bbox.\n\nFields\n\npoints: a Vector of Point.\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\nmeasures: holds values from each point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.MultiPointZ","page":"Home","title":"Shapefile.MultiPointZ","text":"MultiPointZ <: AbstractMultiPoint\n\nCollection of 3d points, from a shape file.\n\nIncludes a measures field, holding values from each point.\n\nMay have a known bounding box, which can be retrieved with GeoInterface.bbox.\n\nFields\n\npoints: a Vector of Point.\nzvalues: a Vector of Float64 representing the z dimension values.\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\nmeasures: holds values from each point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Point","page":"Home","title":"Shapefile.Point","text":"Point <: AbstractPoint\n\nPoint from a shape file.\n\nFields x, y hold the spatial location.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.PointM","page":"Home","title":"Shapefile.PointM","text":"PointM <: AbstractPoint\n\nPoint from a shape file.\n\nFields x, y hold the spatial location.\n\nIncludes a measure field m, holding a value for the point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.PointZ","page":"Home","title":"Shapefile.PointZ","text":"PointZ <: AbstractPoint\n\nThree dimensional point, from a shape file.\n\nFields x, y, z hold the spatial location.\n\nIncludes a measure field m, holding a value for the point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Polygon","page":"Home","title":"Shapefile.Polygon","text":"Polygon <: AbstractPolygon\n\nRepresents a Polygon from a shape file.\n\nFields\n\npoints: a Vector of Point represents a one or multiple closed areas.\nparts: a Vector of Int32 indicating the polygon each point belongs to.\nMBR: nothing or the known bounding box. Can be retrieved with GI.bbox.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.PolygonM","page":"Home","title":"Shapefile.PolygonM","text":"PolygonM <: AbstractPolygon\n\nRepresents a polygon from a shape file\n\nFields\n\npoints: a Vector of Point represents a one or multiple closed areas.\nparts: a Vector of Int32 indicating the polygon each point belongs to.\nMBR: nothing or the known bounding box. Can be retrieved with GI.bbox.\nmeasures: holds values from each point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.PolygonZ","page":"Home","title":"Shapefile.PolygonZ","text":"PolygonZ <: AbstractPolygon\n\nA three dimensional polygon from a shape file.\n\nFields\n\npoints: a Vector of Point represents a one or multiple closed areas.\nparts: a Vector of Int32 indicating the polygon each point belongs to.\nzvalues: a Vector of Float64 representing the z dimension values.\nMBR: nothing or the known bounding box. Can be retrieved with GI.bbox.\nmeasures: holds values from each point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Polyline","page":"Home","title":"Shapefile.Polyline","text":"Polyline <: AbstractPolyline\n\nRepresents a single or multiple polylines from a shape file.\n\nFields\n\npoints: a Vector of Point represents a one or multiple lines.\nparts: a Vector of Int32 indicating the line each point belongs to.\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.PolylineM","page":"Home","title":"Shapefile.PolylineM","text":"PolylineM <: AbstractPolyline\n\nPolyline from a shape file, with measures.\n\nFields\n\npoints: a Vector of Point represents a one or multiple lines.\nparts: a Vector of Int32 indicating the line each point belongs to.\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\nmeasures: holds values from each point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.PolylineZ","page":"Home","title":"Shapefile.PolylineZ","text":"PolylineZ <: AbstractPolyline\n\nThree dimensional polyline of from a shape file.\n\nFields\n\npoints: a Vector of Point represents a one or multiple lines.\nparts: a Vector of Int32 indicating the line each point belongs to.\nzvalues: a Vector of Float64 representing the z dimension values.\nMBR: nothing or the known bounding box. Can be retrieved with GeoInterface.bbox.\nmeasures: holds values from each point.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Rect","page":"Home","title":"Shapefile.Rect","text":"Rect\n\nA rectangle object to represent the bounding box for other shape file shapes.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Row","page":"Home","title":"Shapefile.Row","text":"Row\n\nRow(geometry, record::DBFTables.Row)\n\nA struct representing a single record in a shapefile.\n\nProperty names accessable by row.x are geometry for the geometry object, and the names of the columns in record.\n\n\n\n\n\n","category":"type"},{"location":"#Shapefile.Table","page":"Home","title":"Shapefile.Table","text":"Table \n\nTable(path::AbstractString)\nTable(shp::Handle{T}, dbf::DBFTables.Table)\n\nRepresents both geometries and their associated fields as a Tables.jl compatible table, where each row is is a an object such as a (Point](@ref), Polyline or Polygon.\n\nThe Shapefile.Table constructor can read either a String path to a shapefile, or a Shapefile.Handle and a DBFTables.Table.\n\nProperty names accessable by table.x are geometry for the geometry object, and the names of the columns in dbf.\n\n\n\n\n\n","category":"type"},{"location":"#Base.iterate","page":"Home","title":"Base.iterate","text":"Base.iterate(t::Table)\n\nIterate over the rows of a Shapefile.Table, yielding a Shapefile.Row for each row.\n\n\n\n\n\n","category":"function"},{"location":"#Shapefile.shape-Tuple{Shapefile.Row}","page":"Home","title":"Shapefile.shape","text":"shape(row::Row)\n\nGet the geometry associated with a Row from a shapefile Table.\n\n\n\n\n\n","category":"method"},{"location":"#Shapefile.shapes-Tuple{Shapefile.Table}","page":"Home","title":"Shapefile.shapes","text":"shapes(t::Table)\n\nGet a vector of the geometries in a shapefile Table, without any metadata.\n\n\n\n\n\n","category":"method"},{"location":"#Shapefile.write-Tuple{AbstractString, Shapefile.Handle}","page":"Home","title":"Shapefile.write","text":"write(path::AbstractString, handle::Shapefile.Handle)\nwrite(path::AbstractString, geoms)\n\nWrite geometries to file. geoms can be a table or any iterable of GeoInterface.jl combatible geometry objects, with missing values allowed.\n\nNote: As DBFTables.jl does not yet write, we can't write Table or FeatureCollection data besides geometries. Only .shp and .shx files are written currently.\n\n\n\n\n\n","category":"method"}]
}
